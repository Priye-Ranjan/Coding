Problem Description:
Given a string S, find length of the longest substring with all distinct characters.  For example, for input "abca", the output is 3 as "abc" is the longest substring with all distinct characters.

Input:
The first line of input contains an integer T denoting the number of test cases.
The first line of each test case is String str.

Output:
Print length of smallest substring with maximum number of distinct characters.
Note: The output substring should have all distinct characters.

Constraints:
1 ≤ T ≤ 100
1 ≤ size of str ≤ 10000

Example:
Input:
2
abababcdefababcdab
geeksforgeeks

Output:
6
7

CODE:
/*package whatever //do not write package name here */

import java.util.*;
import java.lang.*;
import java.io.*;

class LongesSubString {
	public static void main (String[] args)throws IOException {
		//code
		BufferedReader ob=new BufferedReader(new InputStreamReader(System.in));
		int z=Integer.parseInt(ob.readLine());
		while(z-->0)
		{
		    int max=0;
		    String s=ob.readLine();
		    int l=s.length();
		    Set<Character> c=new LinkedHashSet<>();
		    int i=0,j=0;
		    while(i<l && j<l)
		    {
		        if(!c.contains(s.charAt(j)))
		        {
		            c.add(s.charAt(j));
		            j++;
		            max=Math.max(max,j-i);
		        }
		        else{
		            c.remove(s.charAt(i));
		            i++;
		        }
		    }
		    System.out.println(max);
	}}
}
